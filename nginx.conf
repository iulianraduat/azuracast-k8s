map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80;
# include snippets/ssl-params.conf;

  root /var/www/azuracast;
  server_name radio.<YOUR_DOMAIN>;

  rewrite (/radio-.*\.mp3)$ $1 last;

  location = /podcasts {
    return 301 /public/radio/podcasts;
  }

  location / {
    try_files $uri @proxy;
  }

  location @proxy {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_80>;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
    proxy_set_header Proxy "";
  }

  location ~ /radio-.*\.mp3$ {
    try_files $uri @proxy-radio;
  }

  location @proxy-radio {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_8000>;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
    proxy_set_header Proxy "";
  }

  location ~ /api/station {
    try_files $uri @proxy-api;
  }

  location @proxy-api {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_80>;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
    proxy_set_header Accept-Encoding ""; # no compression allowed so sub_filter works
    sub_filter_types application/json;
    sub_filter_once off;
    sub_filter 'http://127.0.0.1:<MAPPED_PORT_80>/' 'http://radio.<YOUR_DOMAIN>/';
  }

  location ~ /episode/ {
    try_files $uri @proxy-episode;
  }

  location @proxy-episode {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_80>;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
    proxy_set_header Accept-Encoding "";
    sub_filter_once off;
    sub_filter '</head>' '<link rel="stylesheet" href="/cssstyle.css"></head>';
    sub_filter '</body>' '<script src="/jsscript-episode.js"></script></body>';
    # if you use `https` then please change http to https bellow
    sub_filter 'http://127.0.0.1:<MAPPED_PORT_80>/' 'http://radio.<YOUR_DOMAIN>/';
    sub_filter 'http://127.0.0.1' 'http://radio.<YOUR_DOMAIN>/';
  }

  location ~ /podcast/ {
    try_files $uri @proxy-podcast;
  }

  location @proxy-podcast {
    proxy_pass http://127.0.0.1:<MAPPED_PORT_80>;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
    proxy_set_header Accept-Encoding "";
    sub_filter_once off;
    sub_filter '</head>' '<link rel="stylesheet" href="/cssstyle.css"></head>';
    sub_filter '</body>' '<script src="/jsscript-podcast.js"></script></body>';
  }

  error_page 404 = @my404redirect;
  location @my404redirect {
    return 301 /;
  }

  access_log /var/log/nginx/radio-access.log;
  error_log /var/log/nginx/radio-error.log error;

# ssl_certificate /etc/letsencrypt/live/radio.<YOUR_DOMAIN>/fullchain.pem; # managed by Certbot
# ssl_certificate_key /etc/letsencrypt/live/radio.<YOUR_DOMAIN>/privkey.pem; # managed by Certbot
}